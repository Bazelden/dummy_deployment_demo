name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: bazelden/dummy_deployment_demo

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PAT }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image

        run: |
          cd /home/ec2-user/app       
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Install terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Init terraform
        run: terraform init
        working-directory: ./dummy_deployment/infrastructure

      - name: Plan terraform
        run: terraform plan -var="ssh_public_key=${{ secrets.AWS_SSH_PUBLIC_KEY }}"
        working-directory: ./dummy_deployment/infrastructure

      - name: Apply terraform
        run: terraform apply -auto-approve
        working-directory: ./dummy_deployment/infrastructure

      - name: Test the application
        run: |
          # Retrieve the public IP of the instance
          IP=$(terraform output -raw instance_ip)
          echo "Public IP: $IP"
          sleep 60 # Wait for the instance and Docker container to be fully ready
          curl http://$IP

      - name: Destroy Terraform
        if: always()
        run: terraform destroy -auto-approve
        working-directory: ./dummy_deployment/infrastructure
